<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Config 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="productMapper">

	<!-- 상품 검색 -->
	<select id="getProductSearch" parameterType="hashmap" resultType="int">
		select nvl(count(*),0) from product
		<if test="sentence!=null and sentence !='' ">
		where product_name like '%${sentence}%'
		</if>
	</select>
	
	<!-- 상품 검색 결과 -->
	<select id="getProductSearchitem" parameterType="hashmap" resultType="Product">
		<if test="sentence!=null and sentence !='' ">
		  SELECT product_no AS productNo, category, product_name AS productName, 
		product_detail AS productDetail, product_image AS productImage, product_price AS productPrice, 
		product_stock AS productStock, product_amount AS productAmount, product_time AS productTime 
		FROM ( SELECT rownum rnum , a.* 
		FROM (SELECT * FROM product
		where product_name like '%${sentence}%') a)
		</if>
	</select>
	
	<!-- 상품 전체 -->
	<select id="productList" parameterType="String" resultType="Product">
		SELECT product_no AS
		productNo, category, product_name AS productName,
		product_detail AS productDetail, product_image AS productImage,
		product_price AS productPrice, product_stock AS productStock,
		product_amount AS productAmount, product_time AS productTime
		FROM product
		<if test="sort == '10'">
			WHERE category = 10
		</if>
		<if test="sort == '20'">
			WHERE category = 20
		</if>
		<if test="sort == '30'">
			WHERE category = 30
		</if>
		<if test="sort == '40'">
			WHERE category = 40
		</if>
		<if test="sort == '50'">
			WHERE category = 50
		</if>
		<if test="sort == null">
			ORDER BY product_no
		</if>
		<if test="sort == 'popular'">
			ORDER BY product_stock
		</if>
		<if test="sort == 'ASC'">
			ORDER BY product_price
		</if>
		<if test="sort == 'DESC'">
			ORDER BY product_price DESC
		</if>
	</select>
	
	<!-- 상품 상세 -->
	<select id="productDetail" resultType="Product">
		SELECT product_no AS
		productNo, category AS category, product_name AS productName,
		product_detail AS productDetail, product_image AS productImage,
		product_price AS productPrice, product_stock AS productStock,
		product_amount AS productAmount, product_time AS productTime
		FROM product
		WHERE product_no = #{productNo}
	</select>
	
	<select id="reviewCal" parameterType="int" resultType="Review">
		SELECT count(*) AS reviewNo, NVL(avg(review_score), 0) AS reviewScore FROM review where product_no = #{productNo}
	</select>
	
	<select id="getReview" parameterType="int" resultType="Review">
		SELECT id, review_content AS reviewContent, review_image AS reviewImage, review_date AS reviewDate, review_score AS reviewScore
			FROM review WHERE product_no = #{productNo}
	</select>
	
	<select id="getWeather" parameterType="String" resultType="Product">
		SELECT product_no AS productNo, product_name AS productName, product_image AS productImage, product_price AS productPrice 
			FROM product WHERE product_no IN (SELECT product_no FROM weather WHERE weather=#{weather})
	</select>
	
	<!-- ADMIN -->
	<select id="countByCategory" parameterType="String" resultType="int">
		SELECT count(*)+1 FROM product WHERE category= #{category}
	</select>
	
	<insert id="insertProduct" parameterType="Product">
		INSERT INTO product VALUES (#{productNo}, #{category}, #{productName}, #{productDetail}, #{productImage}, #{productPrice}, #{productStock}, #{productAmount}, #{productTime})
	</insert>
	
	<select id="countProduct" resultType="int">
		SELECT count(*) FROM product
	</select>
	
	<select id="getFullInfo" resultType="Product">
		SELECT product_no AS productNo, category AS category, product_name AS productName,  product_detail AS productDetail, product_image AS productImage, 
			product_price AS productPrice, product_stock AS productStock,  product_amount AS productAmount, product_time AS productTime 
			FROM (
			SELECT ROWNUM RN, A.* 
				FROM (
						SELECT * 
						FROM product WHERE category != 0
						) A
				)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<update id="modifyStock" parameterType="Hashmap">
		UPDATE product SET product_stock = #{productStock} WHERE product_no = #{productNo}
	</update>
	
	<update id="modify" parameterType="Product">
		UPDATE product SET product_name = #{productName}, product_detail = #{productDetail}, product_price = #{productPrice}, product_amount = #{productAmount}, product_time = #{productTime}
		<if test="productImage != null">
			, product_image = #{productImage}
		</if>
			WHERE product_no = #{productNo}
	</update>
	
	<update id="delete" parameterType="int">
		UPDATE product SET category = 0, product_stock = 0 WHERE product_no = #{productNo}
	</update>
	
	<select id="getToday" resultType="Product">
		SELECT product_no AS
		productNo, category, product_name AS productName,
		product_detail AS productDetail, product_image AS productImage,
		product_price AS productPrice, product_stock AS productStock,
		product_amount AS productAmount, product_time AS productTime
		FROM product
		WHERE product_no = (SELECT product_no FROM today WHERE TO_char(todate, 'yyyy-MM-dd') = TO_char(SYSDATE, 'yyyy-MM-dd'))
	</select>
	
	<select id="getDate" resultType="Date">
		SELECT todate+1 FROM today WHERE TO_char(todate, 'yyyy-MM-dd') = TO_char(SYSDATE, 'yyyy-MM-dd')
	</select>
	
	<select id="todayProNo" resultType="int">
		SELECT product_no AS productNo FROM today WHERE TO_char(todate, 'yyyy-MM-dd') = TO_char(SYSDATE, 'yyyy-MM-dd')
	</select>
</mapper>